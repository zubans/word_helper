"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.stopDebugging = void 0;
const office_addin_dev_settings_1 = require("office-addin-dev-settings");
const office_addin_manifest_1 = require("office-addin-manifest");
const debugInfo = __importStar(require("./debugInfo"));
const process_1 = require("./process");
const defaults_1 = require("./defaults");
const office_addin_usage_data_1 = require("office-addin-usage-data");
/* global console process */
function stopDebugging(manifestPath) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            console.log("Debugging is being stopped...");
            const isWindowsPlatform = process.platform === "win32";
            const manifestInfo = yield office_addin_manifest_1.OfficeAddinManifest.readManifestFile(manifestPath);
            if (!manifestInfo.id) {
                throw new office_addin_usage_data_1.ExpectedError("Manifest does not contain the id for the Office Add-in.");
            }
            // clear dev settings
            if (isWindowsPlatform) {
                yield (0, office_addin_dev_settings_1.clearDevSettings)(manifestInfo.id);
            }
            // unregister
            try {
                yield (0, office_addin_dev_settings_1.unregisterAddIn)(manifestPath);
            }
            catch (err) {
                console.log(`Unable to unregister the Office Add-in. ${err}`);
            }
            const processId = debugInfo.readDevServerProcessId();
            if (processId) {
                (0, process_1.stopProcess)(processId);
                console.log(`Stopped dev server. Process id: ${processId}`);
                debugInfo.clearDevServerProcessId();
            }
            console.log("Debugging has been stopped.");
            defaults_1.usageDataObject.reportSuccess("stopDebugging()");
        }
        catch (err) {
            defaults_1.usageDataObject.reportException("stopDebugging()", err);
            throw err;
        }
    });
}
exports.stopDebugging = stopDebugging;
//# sourceMappingURL=stop.js.map