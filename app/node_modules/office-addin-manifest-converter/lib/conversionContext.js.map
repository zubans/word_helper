{"version":3,"file":"conversionContext.js","sourceRoot":"","sources":["../src/conversionContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { OSF } from \"../lib/osfmos\";\nimport { CommandSurfaceType } from \"./converter\";\nimport * as MOS from \"./mosManifest\";\nimport { Utilities } from \"./utilities\";\n\nexport class ConversionContext {\n  private _inputFormFactor: string;\n  private _hostType: OSF.ManifestHostType;\n  private _currentFunctionFileResid: string;\n  private _currentVersionOverrideNumber: OSF.VersionOverridesNumber;\n  private _currentVersionOverrideCapabilities: MOS.Capabilities[];\n  private _currentRibbonIndex: number = ConversionContext.UnsetIndex;\n  private _currentMenuIndex: number = ConversionContext.UnsetIndex;\n  private _currentTabIndex: number = ConversionContext.UnsetIndex;\n  private _currentGroupIndex: number = ConversionContext.UnsetIndex;\n  private _currentCustomMobileGroupIndex: number = ConversionContext.UnsetIndex;\n  private _currentControlIndex: number = ConversionContext.UnsetIndex;\n  private _currentFixedControlIndex: number = ConversionContext.UnsetIndex;\n\n  private _currentMenuItemIndex: number = ConversionContext.UnsetIndex;\n\n  private _currentIconIndex: number = ConversionContext.UnsetIndex;\n\n  // Context menu related localization file indexes\n  private _currentContextMenuIndex: number = ConversionContext.UnsetIndex;\n  private _currentContextMenuMenuIndex: number = ConversionContext.UnsetIndex;\n  private _currentContextMenuMenuControlIndex: number = ConversionContext.UnsetIndex;\n  private _currentContextMenuMenuControlMenuItemIndex: number = ConversionContext.UnsetIndex;\n\n  private _currentCommandSurfaceType: CommandSurfaceType = CommandSurfaceType.None;\n\n  private _isInFixedControl: boolean = false;\n\n  public static UnsetIndex: number = -1;\n\n  constructor() {\n    this._hostType = null;\n    this._inputFormFactor = null;\n  }\n\n  getFormFactor(): string {\n    return this._inputFormFactor;\n  }\n\n  setFormFactor(formFactor: string): void {\n    this._inputFormFactor = formFactor;\n  }\n\n  getManifestHostType(): OSF.ManifestHostType {\n    return this._hostType;\n  }\n\n  setManifestHostType(hostType: OSF.ManifestHostType): void {\n    this._hostType = hostType;\n  }\n\n  getCurrentFunctionFileResid(): string {\n    return this._currentFunctionFileResid;\n  }\n\n  setCurrentFunctionFileResid(currentFunctionFileResid: string): void {\n    this._currentFunctionFileResid = currentFunctionFileResid;\n  }\n\n  getCurrentVersionOverrideCapabilities(): MOS.Capabilities[] {\n    return this._currentVersionOverrideCapabilities;\n  }\n\n  getCurrentVersionOverrideNumber(): OSF.VersionOverridesNumber {\n    return this._currentVersionOverrideNumber;\n  }\n\n  setCurrentVersionOverrideAndCapabilities(\n    versionOverrideNumber: OSF.VersionOverridesNumber,\n    versionOverrideCapabilities: MOS.Capabilities[],\n  ): void {\n    this._currentVersionOverrideNumber = versionOverrideNumber;\n    this._currentVersionOverrideCapabilities = versionOverrideCapabilities;\n  }\n\n  getCurrentRibbonIndex(): number {\n    return this._currentRibbonIndex;\n  }\n\n  setCurrentRibbonIndex(ribbonIndex: number) {\n    this._currentRibbonIndex = ribbonIndex;\n  }\n\n  getCurrentMenuIndex(): number {\n    return this._currentMenuIndex;\n  }\n\n  setCurrentMenuIndex(menuIndex: number) {\n    this._currentMenuIndex = menuIndex;\n  }\n\n  getCurrentTabIndex(): number {\n    return this._currentTabIndex;\n  }\n\n  setCurrentTabIndex(tabIndex: number) {\n    this._currentTabIndex = tabIndex;\n  }\n\n  getCurrentGroupIndex(): number {\n    return this._currentGroupIndex;\n  }\n\n  setCurrentGroupIndex(groupIndex: number) {\n    this._currentGroupIndex = groupIndex;\n  }\n\n  getCurrentCustomMobileGroupIndex(): number {\n    return this._currentCustomMobileGroupIndex;\n  }\n\n  setCurrentCustomMobileGroupIndex(customMobileGroupIndex: number) {\n    this._currentCustomMobileGroupIndex = customMobileGroupIndex;\n  }\n\n  getCurrentControlIndex(): number {\n    return this._currentControlIndex;\n  }\n\n  setCurrentControlIndex(controlIndex: number) {\n    this._currentControlIndex = controlIndex;\n  }\n\n  getCurrentMenuItemIndex(): number {\n    return this._currentMenuItemIndex;\n  }\n\n  setCurrentMenuItemIndex(menuItemIndex: number) {\n    this._currentMenuItemIndex = menuItemIndex;\n  }\n\n  setCurrentCommandSurfaceType(commandSurfaceType: CommandSurfaceType) {\n    this._currentCommandSurfaceType = commandSurfaceType;\n  }\n\n  // Context menu related localization indexes\n  getCurrentContextMenuIndex(): number {\n    return this._currentContextMenuIndex;\n  }\n\n  setCurrentContextMenuIndex(contextMenuIndex: number) {\n    this._currentContextMenuIndex = contextMenuIndex;\n  }\n\n  getCurrentContextMenuMenuIndex(): number {\n    return this._currentContextMenuMenuIndex;\n  }\n\n  setCurrentContextMenuMenuIndex(contextMenuMenuIndex: number) {\n    this._currentContextMenuMenuIndex = contextMenuMenuIndex;\n  }\n\n  getCurrentContextMenuMenuControlIndex(): number {\n    return this._currentContextMenuMenuControlIndex;\n  }\n\n  setCurrentContextMenuMenuControlIndex(contextMenuMenuControlIndex: number) {\n    this._currentContextMenuMenuControlIndex = contextMenuMenuControlIndex;\n  }\n\n  getCurrentContextMenuMenuControlMenuItemIndex(): number {\n    return this._currentContextMenuMenuControlMenuItemIndex;\n  }\n\n  setCurrentContextMenuMenuControlMenuItemIndex(contextMenuMenuControlMenuItemIndex: number) {\n    this._currentContextMenuMenuControlMenuItemIndex = contextMenuMenuControlMenuItemIndex;\n  }\n\n  getCurrentIconIndex(): number {\n    return this._currentIconIndex;\n  }\n\n  setCurrentIconIndex(iconIndex: number) {\n    this._currentIconIndex = iconIndex;\n  }\n\n  getCurrentFixedControlIndex(): number {\n    return this._currentFixedControlIndex;\n  }\n\n  setCurrentFixedControlIndex(fixedControlIndex: number) {\n    this._currentFixedControlIndex = fixedControlIndex;\n  }\n\n  setInFixedControl(isInFixedControl: boolean) {\n    this._isInFixedControl = isInFixedControl;\n  }\n\n  isInFixedControl() {\n    return this._isInFixedControl;\n  }\n\n  isInRibbon() {\n    return this._currentCommandSurfaceType == CommandSurfaceType.Ribbon;\n  }\n}\n"]}