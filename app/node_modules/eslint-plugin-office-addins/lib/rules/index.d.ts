declare const _default: {
    "call-sync-before-read": import("@typescript-eslint/utils/ts-eslint").RuleModule<"callSync", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "load-object-before-read": import("@typescript-eslint/utils/ts-eslint").RuleModule<"loadBeforeRead", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "call-sync-after-load": import("@typescript-eslint/utils/ts-eslint").RuleModule<"callSyncAfterLoad", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "no-context-sync-in-loop": import("@typescript-eslint/utils/ts-eslint").RuleModule<"loopedSync", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "no-empty-load": import("@typescript-eslint/utils/ts-eslint").RuleModule<"emptyLoad", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "no-navigational-load": import("@typescript-eslint/utils/ts-eslint").RuleModule<"navigationalLoad", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "no-office-initialize": import("@typescript-eslint/utils/ts-eslint").RuleModule<"noOfficeInitialize", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "test-for-null-using-isNullObject": import("@typescript-eslint/utils/ts-eslint").RuleModule<"useIsNullObject", [], unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
};
export default _default;
