"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.questionNodes = exports.QuestionNodes = void 0;
const tslib_1 = require("tslib");
const create_1 = require("./create");
const other_1 = require("./other");
tslib_1.__exportStar(require("./constants"), exports);
tslib_1.__exportStar(require("./create"), exports);
tslib_1.__exportStar(require("./inputs"), exports);
tslib_1.__exportStar(require("./options"), exports);
class QuestionNodes {
    createProject() {
        return (0, create_1.createProjectQuestionNode)();
    }
    createSampleProject() {
        return (0, create_1.createSampleProjectQuestionNode)();
    }
    createProjectCliHelp() {
        return (0, create_1.createProjectCliHelpNode)();
    }
    addWebpart() {
        return (0, other_1.addWebPartQuestionNode)();
    }
    selectTeamsAppManifest() {
        return (0, other_1.selectTeamsAppManifestQuestionNode)();
    }
    validateTeamsApp() {
        return (0, other_1.validateTeamsAppQuestionNode)();
    }
    previewWithTeamsAppManifest() {
        return (0, other_1.previewWithTeamsAppManifestQuestionNode)();
    }
    listCollaborator() {
        return (0, other_1.listCollaboratorQuestionNode)();
    }
    grantPermission() {
        return (0, other_1.grantPermissionQuestionNode)();
    }
    deployAadManifest() {
        return (0, other_1.deployAadManifestQuestionNode)();
    }
    createNewEnv() {
        return (0, other_1.createNewEnvQuestionNode)();
    }
    copilotPluginAddAPI() {
        return (0, other_1.copilotPluginAddAPIQuestionNode)();
    }
    apiKey() {
        return (0, other_1.apiSpecApiKeyQuestion)();
    }
    oauth() {
        return (0, other_1.oauthQuestion)();
    }
    addPlugin() {
        return (0, other_1.addPluginQuestionNode)();
    }
    uninstall() {
        return (0, other_1.uninstallQuestionNode)();
    }
    syncManifest() {
        return (0, other_1.syncManifestQuestionNode)();
    }
}
exports.QuestionNodes = QuestionNodes;
exports.questionNodes = new QuestionNodes();
//# sourceMappingURL=index.js.map