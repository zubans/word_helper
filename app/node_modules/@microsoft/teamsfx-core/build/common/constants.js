"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpecParserSource = exports.AppStudioScopes = exports.AzureScopes = exports.SPFxScopes = exports.GraphReadUserScopes = exports.GraphScopes = exports.AuthSvcScopes = exports.getAppStudioEndpoint = exports.getResourceGroupInPortal = exports.getAllowedAppMaps = exports.OutlookClientId = exports.OfficeClientId = exports.TeamsClientId = exports.VSCodeExtensionCommand = exports.HelpLinks = exports.ConstantString = void 0;
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
const localizeUtils_1 = require("./localizeUtils");
class ConstantString {
}
exports.ConstantString = ConstantString;
ConstantString.UTF8Encoding = "utf-8";
ConstantString.DeploymentResourceType = "Microsoft.Resources/deployments";
ConstantString.DeploymentNotFound = "DeploymentNotFound";
ConstantString.RootFolder = "TeamsApps";
class HelpLinks {
}
exports.HelpLinks = HelpLinks;
HelpLinks.WhyNeedProvision = "https://aka.ms/teamsfx/whyneedprovision";
HelpLinks.SwitchTenant = "https://aka.ms/teamsfx-switch-tenant";
class VSCodeExtensionCommand {
}
exports.VSCodeExtensionCommand = VSCodeExtensionCommand;
VSCodeExtensionCommand.showOutputChannel = "command:fx-extension.showOutputChannel";
VSCodeExtensionCommand.openFolder = "command:fx-extension.openFolder";
VSCodeExtensionCommand.openReadme = "command:fx-extension.openReadMe?%5B%22Notification%22%5D";
class TeamsClientId {
}
exports.TeamsClientId = TeamsClientId;
TeamsClientId.MobileDesktop = "1fec8e78-bce4-4aaf-ab1b-5451cc387264";
TeamsClientId.Web = "5e3ce6c0-2b1f-4285-8d4b-75ee78787346";
class OfficeClientId {
}
exports.OfficeClientId = OfficeClientId;
OfficeClientId.Desktop = "0ec893e0-5785-4de6-99da-4ed124e5296c";
OfficeClientId.Web1 = "4345a7b9-9a63-4910-a426-35363201d503";
OfficeClientId.Web2 = "4765445b-32c6-49b0-83e6-1d93765276ca";
class OutlookClientId {
}
exports.OutlookClientId = OutlookClientId;
OutlookClientId.Desktop = "d3590ed6-52b3-4102-aeff-aad2292ab01c";
OutlookClientId.Web1 = "00000002-0000-0ff1-ce00-000000000000";
OutlookClientId.Web2 = "bc59ab01-8403-45c6-8796-ac3ef710b3e3";
OutlookClientId.Mobile = "27922004-5251-4030-b22d-91ecd9a37ea4";
function getAllowedAppMaps() {
    return {
        [TeamsClientId.MobileDesktop]: (0, localizeUtils_1.getLocalizedString)("core.common.TeamsMobileDesktopClientName"),
        [TeamsClientId.Web]: (0, localizeUtils_1.getLocalizedString)("core.common.TeamsWebClientName"),
        [OfficeClientId.Desktop]: (0, localizeUtils_1.getLocalizedString)("core.common.OfficeDesktopClientName"),
        [OfficeClientId.Web1]: (0, localizeUtils_1.getLocalizedString)("core.common.OfficeWebClientName1"),
        [OfficeClientId.Web2]: (0, localizeUtils_1.getLocalizedString)("core.common.OfficeWebClientName2"),
        [OutlookClientId.Desktop]: (0, localizeUtils_1.getLocalizedString)("core.common.OutlookDesktopClientName"),
        [OutlookClientId.Web1]: (0, localizeUtils_1.getLocalizedString)("core.common.OutlookWebClientName1"),
        [OutlookClientId.Web2]: (0, localizeUtils_1.getLocalizedString)("core.common.OutlookWebClientName2"),
    };
}
exports.getAllowedAppMaps = getAllowedAppMaps;
const AzurePortalUrl = "https://portal.azure.com";
function getResourceGroupInPortal(subscriptionId, tenantId, resourceGroupName) {
    if (subscriptionId && tenantId && resourceGroupName) {
        return `${AzurePortalUrl}/#@${tenantId}/resource/subscriptions/${subscriptionId}/resourceGroups/${resourceGroupName}`;
    }
    else {
        return undefined;
    }
}
exports.getResourceGroupInPortal = getResourceGroupInPortal;
function getAppStudioEndpoint() {
    if (process.env.APP_STUDIO_ENV && process.env.APP_STUDIO_ENV === "int") {
        return "https://dev-int.teams.microsoft.com";
    }
    else {
        return "https://dev.teams.microsoft.com";
    }
}
exports.getAppStudioEndpoint = getAppStudioEndpoint;
exports.AuthSvcScopes = ["https://api.spaces.skype.com/Region.ReadWrite"];
exports.GraphScopes = ["Application.ReadWrite.All", "TeamsAppInstallation.ReadForUser"];
exports.GraphReadUserScopes = ["https://graph.microsoft.com/User.ReadBasic.All"];
const SPFxScopes = (tenant) => [`${tenant}/Sites.FullControl.All`];
exports.SPFxScopes = SPFxScopes;
exports.AzureScopes = ["https://management.core.windows.net/user_impersonation"];
exports.AppStudioScopes = [`${getAppStudioEndpoint()}/AppDefinitions.ReadWrite`];
exports.SpecParserSource = "SpecParser";
//# sourceMappingURL=constants.js.map