"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDriverContext = exports.mapStateToEnv = exports.loadStateFromEnv = void 0;
const globalVars_1 = require("../../../common/globalVars");
// Needs to validate the parameters outside of the function
function loadStateFromEnv(outputEnvVarNames) {
    const result = {};
    for (const [propertyName, envVarName] of outputEnvVarNames) {
        result[propertyName] = process.env[envVarName];
    }
    return result;
}
exports.loadStateFromEnv = loadStateFromEnv;
// Needs to validate the parameters outside of the function
function mapStateToEnv(state, outputEnvVarNames, excludedProperties) {
    const result = new Map();
    for (const [outputName, envVarName] of outputEnvVarNames) {
        if (!(excludedProperties === null || excludedProperties === void 0 ? void 0 : excludedProperties.includes(outputName))) {
            result.set(envVarName, state[outputName]);
        }
    }
    return result;
}
exports.mapStateToEnv = mapStateToEnv;
function createDriverContext(inputs) {
    const driverContext = {
        azureAccountProvider: globalVars_1.TOOLS.tokenProvider.azureAccountProvider,
        m365TokenProvider: globalVars_1.TOOLS.tokenProvider.m365TokenProvider,
        ui: globalVars_1.TOOLS.ui,
        progressBar: undefined,
        logProvider: globalVars_1.TOOLS.logProvider,
        telemetryReporter: globalVars_1.TOOLS.telemetryReporter,
        projectPath: inputs.projectPath,
        platform: inputs.platform,
    };
    return driverContext;
}
exports.createDriverContext = createDriverContext;
//# sourceMappingURL=utils.js.map