import { FxError, Result } from "@microsoft/teamsfx-api";
import { DriverContext } from "../interface/commonArgs";
import { ExecutionResult, StepDriver } from "../interface/stepDriver";
import { WrapDriverContext } from "../util/wrapUtil";
import { CreateAppPackageArgs } from "./interfaces/CreateAppPackageArgs";
export declare const actionName = "teamsApp/zipAppPackage";
export declare class CreateAppPackageDriver implements StepDriver {
    description: string;
    readonly progressTitle: string;
    execute(args: CreateAppPackageArgs, context: DriverContext): Promise<ExecutionResult>;
    build(args: CreateAppPackageArgs, context: WrapDriverContext): Promise<Result<Map<string, string>, FxError>>;
    private static expandEnvVars;
    private validateArgs;
    private validateReferencedFile;
    /**
     * Add plugin file and plugin related files to zip.
     * @param zip zip
     * @param pluginRelativePath plugin file path relative to app package folder
     * @param appDirectory app package path containing manifest template.
     * @param context context
     * @param outputDirectory optional. Folder where we should put the resolved manifest in.
     * @returns result of adding plugin file and plugin related files
     */
    private addPlugin;
    /**
     * Add plugin related files (OpenAPI spec) to zip.
     * @param zip zip.
     * @param pluginFile plugin file path relative to app package folder.
     * @param appDirectory app package folder.
     * @param context context.
     * @returns results whether add files related to plugin is successful.
     */
    private addPluginRelatedFiles;
    private addFileWithVariable;
    private addFileInZip;
    private writeJsonFile;
}
//# sourceMappingURL=createAppPackage.d.ts.map