export declare class ActionInjector {
    static hasActionWithName(provisionNode: any, action: string, name: string): any;
    static getTeamsAppIdEnvName(provisionNode: any): string | undefined;
    static generateAuthAction(actionName: string, authName: string, teamsAppIdEnvName: string, specRelativePath: string, envName: string, flow?: string): any;
    static injectCreateOAuthAction(ymlPath: string, authName: string, specRelativePath: string, forceToAddNew: boolean): Promise<AuthActionInjectResult | undefined>;
    static injectCreateAPIKeyAction(ymlPath: string, authName: string, specRelativePath: string, forceToAddNew: boolean): Promise<AuthActionInjectResult | undefined>;
    static findNextAvailableEnvName(baseEnvName: string, existingEnvNames: string[]): string;
}
export interface AuthActionInjectResult {
    defaultRegistrationIdEnvName: string | undefined;
    registrationIdEnvName: string | undefined;
}
//# sourceMappingURL=actionInjector.d.ts.map