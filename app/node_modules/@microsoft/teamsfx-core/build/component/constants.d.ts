/**
 * @author Huajie Zhang <huajiezhang@microsoft.com>
 */
import { OptionItem } from "@microsoft/teamsfx-api";
export declare enum SolutionError {
    NoAppStudioToken = "NoAppStudioToken",
    FailedToRetrieveUserInfo = "FailedToRetrieveUserInfo",
    CannotFindUserInCurrentTenant = "CannotFindUserInCurrentTenant",
    EmailCannotBeEmptyOrSame = "EmailCannotBeEmptyOrSame",
    InvalidProjectPath = "InvalidProjectPath",
    FailedToCreateAuthFiles = "FailedToCreateAuthFiles",
    FailedToLoadDotEnvFile = "FailedToLoadDotEnvFile",
    InvalidManifestError = "InvalidManifestError",
    FailedToLoadManifestFile = "FailedToLoadManifestFile"
}
export declare const ViewAadAppHelpLinkV5 = "https://aka.ms/teamsfx-view-aad-app-v5";
export declare enum SolutionTelemetryEvent {
    AddSsoStart = "add-sso-start",
    AddSso = "add-sso"
}
export declare enum SolutionTelemetryProperty {
    Component = "component",
    Success = "success",
    CollaboratorCount = "collaborator-count",
    AadOwnerCount = "aad-owner-count",
    AadPermission = "aad-permission",
    ArmDeploymentError = "arm-deployment-error",
    TeamsAppPermission = "teams-app-permission",
    Env = "env",
    SubscriptionId = "subscription-id",
    M365TenantId = "m365-tenant-id",
    PreviousM365TenantId = "previous-m365-tenant-id",
    ConfirmRes = "confirm-res"
}
export declare enum SolutionTelemetrySuccess {
    Yes = "yes",
    No = "no"
}
export declare const SolutionTelemetryComponentName = "core";
export declare const SolutionSource = "core";
export declare const CoordinatorSource = "core";
export declare class AddSsoParameters {
    static readonly filePath: string;
    static readonly Bot = "bot";
    static readonly Tab = "tab";
    static readonly V3 = "V3";
    static readonly V3AuthFolder = "TeamsFx-Auth";
    static readonly Readme = "README.md";
    static readonly ReadmeCSharp = "README.txt";
    static readonly LearnMore: () => string;
    static readonly LearnMoreUrl = "https://aka.ms/teamsfx-add-sso-readme";
    static readonly AddSso = "addSso";
    static readonly AppSettings = "appsettings.json";
    static readonly AppSettingsDev = "appsettings.Development.json";
    static readonly AppSettingsToAdd: {
        Authentication: {
            ClientId: string;
            ClientSecret: string;
            OAuthAuthority: string;
        };
    };
    static readonly AppSettingsToAddForBot: {
        Authentication: {
            ClientId: string;
            ClientSecret: string;
            OAuthAuthority: string;
            ApplicationIdUri: string;
            Bot: {
                InitiateLoginEndpoint: string;
            };
        };
    };
}
export declare const SingleSignOnOptionItem: OptionItem;
export declare enum BotScenario {
    NotificationBot = "notificationBot",
    CommandAndResponseBot = "commandAndResponseBot",
    WorkflowBot = "workflowBot"
}
export declare const AadConstants: {
    DefaultTemplateFileName: string;
};
export declare const KiotaLastCommands: {
    createPluginWithManifest: string;
    createDeclarativeCopilotWithManifest: string;
    addPlugin: string;
};
//# sourceMappingURL=constants.d.ts.map