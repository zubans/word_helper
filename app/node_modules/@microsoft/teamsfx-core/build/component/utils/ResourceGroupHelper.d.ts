import { ResourceManagementClient } from "@azure/arm-resources";
import { AzureAccountProvider, FxError, Inputs, InputsWithProjectPath, IQTreeNode, Result, SingleSelectQuestion, TextInputQuestion } from "@microsoft/teamsfx-api";
export declare type ResourceGroupInfo = {
    createNewResourceGroup: boolean;
    name: string;
    location: string;
};
export declare const newResourceGroupOption = "+ New resource group";
/**
 * select existing resource group or create new resource group
 */
export declare function selectResourceGroupQuestion(azureAccountProvider: AzureAccountProvider, subscriptionId: string): SingleSelectQuestion;
export declare function selectResourceGroupLocationQuestion(azureAccountProvider: AzureAccountProvider, subscriptionId: string): SingleSelectQuestion;
export declare function validateResourceGroupName(input: string, inputs?: Inputs): string | undefined;
export declare function newResourceGroupNameQuestion(defaultResourceGroupName: string): TextInputQuestion;
export declare function resourceGroupQuestionNode(azureAccountProvider: AzureAccountProvider, subscriptionId: string, defaultResourceGroupName: string): IQTreeNode;
declare class ResourceGroupHelper {
    createNewResourceGroup(resourceGroupName: string, azureAccountProvider: AzureAccountProvider, subscriptionId: string, location: string): Promise<Result<string, FxError>>;
    checkResourceGroupExistence(resourceGroupName: string, rmClient: ResourceManagementClient): Promise<Result<boolean, FxError>>;
    getResourceGroupInfo(resourceGroupName: string, rmClient: ResourceManagementClient): Promise<Result<ResourceGroupInfo | undefined, FxError>>;
    listResourceGroups(rmClient: ResourceManagementClient): Promise<Result<[string, string][], FxError>>;
    getLocations(azureAccountProvider: AzureAccountProvider, rmClient: ResourceManagementClient): Promise<Result<string[], FxError>>;
    /**
     * Ask user to create a new resource group or use an existing resource group  V3
     */
    askResourceGroupInfoV3(inputs: InputsWithProjectPath, azureAccountProvider: AzureAccountProvider, rmClient: ResourceManagementClient, defaultResourceGroupName: string): Promise<Result<ResourceGroupInfo, FxError>>;
    createRmClient(azureAccountProvider: AzureAccountProvider, subscriptionId: string): Promise<ResourceManagementClient>;
}
export declare const resourceGroupHelper: ResourceGroupHelper;
export {};
//# sourceMappingURL=ResourceGroupHelper.d.ts.map