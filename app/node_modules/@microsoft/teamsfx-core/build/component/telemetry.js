"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendErrorEvent = exports.sendSuccessEvent = exports.sendStartEvent = void 0;
const globalVars_1 = require("../common/globalVars");
const telemetry_1 = require("../common/telemetry");
function getCommonProperties() {
    const props = {
        [telemetry_1.TelemetryProperty.AppId]: globalVars_1.globalVars.teamsAppId,
        [telemetry_1.TelemetryProperty.TenantId]: globalVars_1.globalVars.m365TenantId,
    };
    return props;
}
function sendStartEvent(eventName, properties, measurements) {
    var _a;
    const props = Object.assign(Object.assign({}, getCommonProperties()), properties);
    (_a = globalVars_1.TOOLS.telemetryReporter) === null || _a === void 0 ? void 0 : _a.sendTelemetryEvent(eventName + "-start", props, measurements !== null && measurements !== void 0 ? measurements : {});
}
exports.sendStartEvent = sendStartEvent;
function sendSuccessEvent(eventName, properties, measurements) {
    var _a;
    const props = Object.assign(Object.assign(Object.assign({}, getCommonProperties()), properties), { [telemetry_1.TelemetryProperty.Success]: telemetry_1.TelemetrySuccess.Yes });
    (_a = globalVars_1.TOOLS.telemetryReporter) === null || _a === void 0 ? void 0 : _a.sendTelemetryEvent(eventName, props, measurements !== null && measurements !== void 0 ? measurements : {});
}
exports.sendSuccessEvent = sendSuccessEvent;
function sendErrorEvent(eventName, error, properties, measurements) {
    var _a;
    const props = Object.assign(Object.assign({}, getCommonProperties()), properties);
    telemetry_1.telemetryUtils.fillInErrorProperties(props, error);
    (_a = globalVars_1.TOOLS.telemetryReporter) === null || _a === void 0 ? void 0 : _a.sendTelemetryErrorEvent(eventName, props, measurements !== null && measurements !== void 0 ? measurements : {}, [
        telemetry_1.TelemetryProperty.ErrorMessage,
    ]);
}
exports.sendErrorEvent = sendErrorEvent;
//# sourceMappingURL=telemetry.js.map