"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inputsToTemplateName = exports.getTemplateName = exports.tryGetTemplateName = exports.Feature2TemplateName = exports.TemplateNames = void 0;
const constants_1 = require("../../../question/constants");
var TemplateNames;
(function (TemplateNames) {
    TemplateNames["Empty"] = "empty";
    TemplateNames["Tab"] = "non-sso-tab";
    TemplateNames["SsoTab"] = "sso-tab";
    TemplateNames["SsoTabObo"] = "sso-tab-with-obo-flow";
    TemplateNames["TabSSR"] = "non-sso-tab-ssr";
    TemplateNames["SsoTabSSR"] = "sso-tab-ssr";
    TemplateNames["DashboardTab"] = "dashboard-tab";
    TemplateNames["NotificationExpress"] = "notification-express";
    TemplateNames["NotificationWebApi"] = "notification-webapi";
    TemplateNames["NotificationHttpTriggerIsolated"] = "notification-http-trigger-isolated";
    TemplateNames["NotificationHttpTrigger"] = "notification-http-trigger";
    TemplateNames["NotificationTimerTriggerIsolated"] = "notification-timer-trigger-isolated";
    TemplateNames["NotificationTimerTrigger"] = "notification-timer-trigger";
    TemplateNames["NotificationHttpTimerTriggerIsolated"] = "notification-http-timer-trigger-isolated";
    TemplateNames["NotificationHttpTimerTrigger"] = "notification-http-timer-trigger";
    TemplateNames["CommandAndResponse"] = "command-and-response";
    TemplateNames["Workflow"] = "workflow";
    TemplateNames["DefaultBot"] = "default-bot";
    TemplateNames["MessageExtension"] = "message-extension";
    TemplateNames["MessageExtensionAction"] = "message-extension-action";
    TemplateNames["MessageExtensionSearch"] = "message-extension-search";
    TemplateNames["MessageExtensionCopilot"] = "message-extension-copilot";
    TemplateNames["M365MessageExtension"] = "m365-message-extension";
    TemplateNames["TabAndDefaultBot"] = "non-sso-tab-default-bot";
    TemplateNames["BotAndMessageExtension"] = "default-bot-message-extension";
    TemplateNames["LinkUnfurling"] = "link-unfurling";
    TemplateNames["AIBot"] = "ai-bot";
    TemplateNames["AIAssistantBot"] = "ai-assistant-bot";
    TemplateNames["ApiPluginFromScratch"] = "api-plugin-from-scratch";
    TemplateNames["ApiPluginFromScratchBearer"] = "api-plugin-from-scratch-bearer";
    TemplateNames["ApiPluginFromScratchOAuth"] = "api-plugin-from-scratch-oauth";
    TemplateNames["CopilotPluginFromScratch"] = "copilot-plugin-from-scratch";
    TemplateNames["CopilotPluginFromScratchApiKey"] = "copilot-plugin-from-scratch-api-key";
    TemplateNames["ApiMessageExtensionSso"] = "api-message-extension-sso";
    TemplateNames["CustomCopilotBasic"] = "custom-copilot-basic";
    TemplateNames["CustomCopilotRagCustomize"] = "custom-copilot-rag-customize";
    TemplateNames["CustomCopilotRagAzureAISearch"] = "custom-copilot-rag-azure-ai-search";
    TemplateNames["CustomCopilotRagCustomApi"] = "custom-copilot-rag-custom-api";
    TemplateNames["CustomCopilotRagMicrosoft365"] = "custom-copilot-rag-microsoft365";
    TemplateNames["CustomCopilotAssistantNew"] = "custom-copilot-assistant-new";
    TemplateNames["CustomCopilotAssistantAssistantsApi"] = "custom-copilot-assistant-assistants-api";
    TemplateNames["BasicGpt"] = "copilot-gpt-basic";
    TemplateNames["GptWithPluginFromScratch"] = "copilot-gpt-from-scratch-plugin";
})(TemplateNames = exports.TemplateNames || (exports.TemplateNames = {}));
// TODO: remove this mapping after all generators are migrated to new generator pattern
exports.Feature2TemplateName = {
    [`${constants_1.CapabilityOptions.empty().id}:undefined`]: TemplateNames.Empty,
    [`${constants_1.CapabilityOptions.nonSsoTab().id}:undefined`]: TemplateNames.Tab,
    [`${constants_1.CapabilityOptions.tab().id}:undefined`]: TemplateNames.SsoTab,
    [`${constants_1.CapabilityOptions.m365SsoLaunchPage().id}:undefined`]: TemplateNames.SsoTabObo,
    [`${constants_1.CapabilityOptions.nonSsoTab().id}:ssr`]: TemplateNames.TabSSR,
    [`${constants_1.CapabilityOptions.tab().id}:ssr`]: TemplateNames.SsoTabSSR,
    [`${constants_1.CapabilityOptions.dashboardTab().id}:undefined`]: TemplateNames.DashboardTab,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.appService().id}`]: TemplateNames.NotificationExpress,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.appServiceForVS().id}`]: TemplateNames.NotificationWebApi,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsHttpTrigger().id}`]: TemplateNames.NotificationHttpTrigger,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsHttpTriggerIsolated().id}`]: TemplateNames.NotificationHttpTriggerIsolated,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsTimerTrigger().id}`]: TemplateNames.NotificationTimerTrigger,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsTimerTriggerIsolated().id}`]: TemplateNames.NotificationTimerTriggerIsolated,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsHttpAndTimerTrigger().id}`]: TemplateNames.NotificationHttpTimerTrigger,
    [`${constants_1.CapabilityOptions.notificationBot().id}:${constants_1.NotificationTriggerOptions.functionsHttpAndTimerTriggerIsolated().id}`]: TemplateNames.NotificationHttpTimerTriggerIsolated,
    [`${constants_1.CapabilityOptions.commandBot().id}:undefined`]: TemplateNames.CommandAndResponse,
    [`${constants_1.CapabilityOptions.workflowBot().id}:undefined`]: TemplateNames.Workflow,
    [`${constants_1.CapabilityOptions.basicBot().id}:undefined`]: TemplateNames.DefaultBot,
    [`${constants_1.CapabilityOptions.me().id}:undefined`]: TemplateNames.MessageExtension,
    [`${constants_1.CapabilityOptions.collectFormMe().id}:undefined`]: TemplateNames.MessageExtensionAction,
    [`${constants_1.CapabilityOptions.SearchMe().id}:undefined`]: TemplateNames.MessageExtensionSearch,
    [`${constants_1.CapabilityOptions.m365SearchMe().id}:undefined:${constants_1.MeArchitectureOptions.botPlugin().id}`]: TemplateNames.MessageExtensionCopilot,
    [`${constants_1.CapabilityOptions.m365SearchMe().id}:undefined:${constants_1.MeArchitectureOptions.botMe().id}`]: TemplateNames.M365MessageExtension,
    [`${constants_1.CapabilityOptions.nonSsoTabAndBot().id}:undefined`]: TemplateNames.TabAndDefaultBot,
    [`${constants_1.CapabilityOptions.botAndMe().id}:undefined`]: TemplateNames.BotAndMessageExtension,
    [`${constants_1.CapabilityOptions.linkUnfurling().id}:undefined`]: TemplateNames.LinkUnfurling,
    [`${constants_1.CapabilityOptions.aiBot().id}:undefined`]: TemplateNames.AIBot,
    [`${constants_1.CapabilityOptions.aiAssistantBot().id}:undefined`]: TemplateNames.AIAssistantBot,
    [`${constants_1.CapabilityOptions.m365SearchMe().id}:undefined:${constants_1.MeArchitectureOptions.newApi().id}:${constants_1.ApiAuthOptions.none().id}`]: TemplateNames.CopilotPluginFromScratch,
    [`${constants_1.CapabilityOptions.m365SearchMe().id}:undefined:${constants_1.MeArchitectureOptions.newApi().id}:${constants_1.ApiAuthOptions.apiKey().id}`]: TemplateNames.CopilotPluginFromScratchApiKey,
    [`${constants_1.CapabilityOptions.m365SearchMe().id}:undefined:${constants_1.MeArchitectureOptions.newApi().id}:${constants_1.ApiAuthOptions.microsoftEntra().id}`]: TemplateNames.ApiMessageExtensionSso,
    [`${constants_1.CapabilityOptions.customCopilotBasic().id}:undefined`]: TemplateNames.CustomCopilotBasic,
    [`${constants_1.CapabilityOptions.customCopilotRag().id}:undefined:${constants_1.CustomCopilotRagOptions.customize().id}`]: TemplateNames.CustomCopilotRagCustomize,
    [`${constants_1.CapabilityOptions.customCopilotRag().id}:undefined:${constants_1.CustomCopilotRagOptions.azureAISearch().id}`]: TemplateNames.CustomCopilotRagAzureAISearch,
    [`${constants_1.CapabilityOptions.customCopilotRag().id}:undefined:${constants_1.CustomCopilotRagOptions.customApi().id}`]: TemplateNames.CustomCopilotRagCustomApi,
    [`${constants_1.CapabilityOptions.customCopilotRag().id}:undefined:${constants_1.CustomCopilotRagOptions.microsoft365().id}`]: TemplateNames.CustomCopilotRagMicrosoft365,
    [`${constants_1.CapabilityOptions.customCopilotAssistant().id}:undefined:${constants_1.CustomCopilotAssistantOptions.new().id}`]: TemplateNames.CustomCopilotAssistantNew,
    [`${constants_1.CapabilityOptions.customCopilotAssistant().id}:undefined:${constants_1.CustomCopilotAssistantOptions.assistantsApi().id}`]: TemplateNames.CustomCopilotAssistantAssistantsApi,
};
function tryGetTemplateName(inputs) {
    for (const [key, value] of exports.inputsToTemplateName) {
        if (Object.keys(key).every((k) => key[k] === inputs[k])) {
            return value;
        }
    }
}
exports.tryGetTemplateName = tryGetTemplateName;
function getTemplateName(inputs) {
    const templateName = tryGetTemplateName(inputs);
    if (!templateName) {
        throw new Error("Template name not found");
    }
    return templateName;
}
exports.getTemplateName = getTemplateName;
// When multiple template name matches, only the top one will be picked.
exports.inputsToTemplateName = new Map([
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.empty().id }, TemplateNames.Empty],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.nonSsoTab().id }, TemplateNames.Tab],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.tab().id }, TemplateNames.SsoTab],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SsoLaunchPage().id },
        TemplateNames.SsoTabObo,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.dashboardTab().id },
        TemplateNames.DashboardTab,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.appService().id,
        },
        TemplateNames.NotificationExpress,
    ],
    [
        {
            [constants_1.QuestionNames.ProgrammingLanguage]: constants_1.ProgrammingLanguage.CSharp,
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.appServiceForVS().id,
        },
        TemplateNames.NotificationWebApi,
    ],
    [
        {
            [constants_1.QuestionNames.ProgrammingLanguage]: constants_1.ProgrammingLanguage.CSharp,
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsHttpTrigger().id,
            ["isIsolated"]: true,
        },
        TemplateNames.NotificationHttpTriggerIsolated,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsHttpTrigger().id,
        },
        TemplateNames.NotificationHttpTrigger,
    ],
    [
        {
            [constants_1.QuestionNames.ProgrammingLanguage]: constants_1.ProgrammingLanguage.CSharp,
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsTimerTrigger().id,
            ["isIsolated"]: true,
        },
        TemplateNames.NotificationTimerTriggerIsolated,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsTimerTrigger().id,
        },
        TemplateNames.NotificationTimerTrigger,
    ],
    [
        {
            [constants_1.QuestionNames.ProgrammingLanguage]: constants_1.ProgrammingLanguage.CSharp,
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsHttpAndTimerTrigger().id,
            ["isIsolated"]: true,
        },
        TemplateNames.NotificationHttpTimerTriggerIsolated,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.notificationBot().id,
            [constants_1.QuestionNames.BotTrigger]: constants_1.NotificationTriggerOptions.functionsHttpAndTimerTrigger().id,
        },
        TemplateNames.NotificationHttpTimerTrigger,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.commandBot().id },
        TemplateNames.CommandAndResponse,
    ],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.workflowBot().id }, TemplateNames.Workflow],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.basicBot().id }, TemplateNames.DefaultBot],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.me().id }, TemplateNames.MessageExtension],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.collectFormMe().id },
        TemplateNames.MessageExtensionAction,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.SearchMe().id },
        TemplateNames.MessageExtensionSearch,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SearchMe().id,
            [constants_1.QuestionNames.MeArchitectureType]: constants_1.MeArchitectureOptions.botPlugin().id,
        },
        TemplateNames.MessageExtensionCopilot,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SearchMe().id,
            [constants_1.QuestionNames.MeArchitectureType]: constants_1.MeArchitectureOptions.botMe().id,
        },
        TemplateNames.M365MessageExtension,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.nonSsoTabAndBot().id },
        TemplateNames.TabAndDefaultBot,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.botAndMe().id },
        TemplateNames.BotAndMessageExtension,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.linkUnfurling().id },
        TemplateNames.LinkUnfurling,
    ],
    [{ [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.aiBot().id }, TemplateNames.AIBot],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.aiAssistantBot().id },
        TemplateNames.AIAssistantBot,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SearchMe().id,
            [constants_1.QuestionNames.MeArchitectureType]: constants_1.MeArchitectureOptions.newApi().id,
            [constants_1.QuestionNames.ApiAuth]: constants_1.ApiAuthOptions.none().id,
        },
        TemplateNames.CopilotPluginFromScratch,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SearchMe().id,
            [constants_1.QuestionNames.MeArchitectureType]: constants_1.MeArchitectureOptions.newApi().id,
            [constants_1.QuestionNames.ApiAuth]: constants_1.ApiAuthOptions.apiKey().id,
        },
        TemplateNames.CopilotPluginFromScratchApiKey,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.m365SearchMe().id,
            [constants_1.QuestionNames.MeArchitectureType]: constants_1.MeArchitectureOptions.newApi().id,
            [constants_1.QuestionNames.ApiAuth]: constants_1.ApiAuthOptions.microsoftEntra().id,
        },
        TemplateNames.ApiMessageExtensionSso,
    ],
    [
        { [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotBasic().id },
        TemplateNames.CustomCopilotBasic,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotRag().id,
            [constants_1.QuestionNames.CustomCopilotRag]: constants_1.CustomCopilotRagOptions.customize().id,
        },
        TemplateNames.CustomCopilotRagCustomize,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotRag().id,
            [constants_1.QuestionNames.CustomCopilotRag]: constants_1.CustomCopilotRagOptions.azureAISearch().id,
        },
        TemplateNames.CustomCopilotRagAzureAISearch,
    ],
    // [
    //   {
    //     [QuestionNames.Capabilities]: CapabilityOptions.customCopilotRag().id,
    //     [QuestionNames.CustomCopilotRag]: CustomCopilotRagOptions.customApi().id,
    //   },
    //   TemplateNames.CustomCopilotRagCustomApi,
    // ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotRag().id,
            [constants_1.QuestionNames.CustomCopilotRag]: constants_1.CustomCopilotRagOptions.microsoft365().id,
        },
        TemplateNames.CustomCopilotRagMicrosoft365,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotAssistant().id,
            [constants_1.QuestionNames.CustomCopilotAssistant]: constants_1.CustomCopilotAssistantOptions.new().id,
        },
        TemplateNames.CustomCopilotAssistantNew,
    ],
    [
        {
            [constants_1.QuestionNames.Capabilities]: constants_1.CapabilityOptions.customCopilotAssistant().id,
            [constants_1.QuestionNames.CustomCopilotAssistant]: constants_1.CustomCopilotAssistantOptions.assistantsApi().id,
        },
        TemplateNames.CustomCopilotAssistantAssistantsApi,
    ],
]);
//# sourceMappingURL=templateNames.js.map