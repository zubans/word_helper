"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SsrTabGenerator = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const constants_1 = require("../../../question/constants");
const templateGenerator_1 = require("./templateGenerator");
const templateNames_1 = require("./templateNames");
// For the APS.NET server-side rendering tab
class SsrTabGenerator extends templateGenerator_1.DefaultTemplateGenerator {
    constructor() {
        super(...arguments);
        this.capabilities2TemplateNames = {
            [constants_1.CapabilityOptions.nonSsoTab().id]: templateNames_1.TemplateNames.TabSSR,
            [constants_1.CapabilityOptions.tab().id]: templateNames_1.TemplateNames.SsoTabSSR,
        };
    }
    activate(context, inputs) {
        const capability = inputs.capabilities;
        return (this.capabilities2TemplateNames[capability] !== undefined &&
            inputs[constants_1.QuestionNames.ProgrammingLanguage] === constants_1.ProgrammingLanguage.CSharp &&
            inputs.targetFramework !== "net6.0" &&
            inputs.targetFramework !== "net7.0");
    }
    getTemplateInfos(context, inputs, destinationPath) {
        return Promise.resolve((0, teamsfx_api_1.ok)([
            {
                templateName: this.capabilities2TemplateNames[inputs.capabilities],
                language: constants_1.ProgrammingLanguage.CSharp,
            },
        ]));
    }
}
exports.SsrTabGenerator = SsrTabGenerator;
//# sourceMappingURL=ssrTabGenerator.js.map