"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoreDepsLoggerAdapter = void 0;
const tslib_1 = require("tslib");
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const os_1 = tslib_1.__importDefault(require("os"));
class CoreDepsLoggerAdapter {
    constructor(logProvider) {
        this.detailLogLines = [];
        this.logProvider = logProvider;
    }
    debug(message) {
        this.addToDetailCache(teamsfx_api_1.LogLevel.Debug, message);
    }
    info(message) {
        this.addToDetailCache(teamsfx_api_1.LogLevel.Info, message);
        this.logProvider.info(message);
    }
    warning(message) {
        this.addToDetailCache(teamsfx_api_1.LogLevel.Warning, message);
        this.logProvider.warning(message);
    }
    error(message) {
        this.addToDetailCache(teamsfx_api_1.LogLevel.Error, message);
        this.logProvider.error(message);
    }
    appendLine(message) {
        this.logProvider.log(teamsfx_api_1.LogLevel.Info, message);
    }
    append(message) {
        this.logProvider.log(teamsfx_api_1.LogLevel.Info, message);
    }
    cleanup() {
        this.detailLogLines = [];
    }
    printDetailLog() {
        this.logProvider.error(this.detailLogLines.join(os_1.default.EOL));
    }
    addToDetailCache(level, message) {
        const line = `${String(teamsfx_api_1.LogLevel[level])} ${new Date().toISOString()}: ${message}`;
        this.detailLogLines.push(line);
    }
}
exports.CoreDepsLoggerAdapter = CoreDepsLoggerAdapter;
//# sourceMappingURL=coreDepsLoggerAdapter.js.map