"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Messages = void 0;
const localizeUtils_1 = require("../../../common/localizeUtils");
exports.Messages = {
    needInstallNpm: () => (0, localizeUtils_1.getLocalizedString)("depChecker.needInstallNpm"),
    failToValidateFuncCoreTool: () => (0, localizeUtils_1.getLocalizedString)("depChecker.failToValidateFuncCoreTool"),
    portableFuncNodeNotMatched: (nodeVersion, funcVersion) => (0, localizeUtils_1.getLocalizedString)("depChecker.portableFuncNodeNotMatched")
        .replace("@NodeVersion", nodeVersion)
        .replace("@FuncVersion", funcVersion),
    symlinkDirAlreadyExist: (linkFilePath) => (0, localizeUtils_1.getLocalizedString)("depChecker.symlinkDirAlreadyExist", linkFilePath),
    invalidFuncVersion: (version) => (0, localizeUtils_1.getLocalizedString)("depChecker.invalidFuncVersion", version),
    noSentinelFile: () => (0, localizeUtils_1.getLocalizedString)("depChecker.noSentinelFile"),
    funcVersionNotMatch: (funcVersion, expectedFuncVersion) => (0, localizeUtils_1.getLocalizedString)("depChecker.funcVersionNotMatch", funcVersion, expectedFuncVersion),
    downloadDotnet: () => (0, localizeUtils_1.getLocalizedString)("depChecker.downloadDotnet"),
    finishInstallDotnet: () => (0, localizeUtils_1.getLocalizedString)("depChecker.finishInstallDotnet"),
    useGlobalDotnet: () => (0, localizeUtils_1.getLocalizedString)("depChecker.useGlobalDotnet"),
    dotnetInstallStderr: () => (0, localizeUtils_1.getLocalizedString)("depChecker.dotnetInstallStderr"),
    dotnetInstallErrorCode: () => (0, localizeUtils_1.getLocalizedString)("depChecker.dotnetInstallErrorCode"),
    dotnetNotFound: () => (0, localizeUtils_1.getLocalizedString)("depChecker.dotnetNotFound"),
    // depsNotFound: () => getLocalizedString("depChecker.depsNotFound"),
    testToolVersionNotMatch: (version, expectedVersion) => (0, localizeUtils_1.getLocalizedString)("depChecker.testToolVersionNotMatch", version, expectedVersion),
    failToValidateTestTool: (errorMessage) => (0, localizeUtils_1.getLocalizedString)("depChecker.failedToValidateTestTool", errorMessage),
    failToValidateVxTestAppInstallOptions: () => (0, localizeUtils_1.getLocalizedString)("depChecker.failToValidateVxTestAppInstallOptions"),
    failToValidateVxTestApp: () => (0, localizeUtils_1.getLocalizedString)("depChecker.failToValidateVxTestApp"),
    failToDownloadFromUrl: () => (0, localizeUtils_1.getLocalizedString)("depChecker.failToDownloadFromUrl"),
    linuxDepsNotFound: () => (0, localizeUtils_1.getLocalizedString)("depChecker.linuxDepsNotFound"),
};
//# sourceMappingURL=message.js.map